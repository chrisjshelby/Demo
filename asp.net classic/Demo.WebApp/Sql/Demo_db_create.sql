/*
Deployment script for C:\USERS\CHRISSHELBY\SOURCE\REPOS\DEMO\ASP.NET CLASSIC\DEMO.WEBAPP\APP_DATA\DEMO.MDF

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "C:\USERS\CHRISSHELBY\SOURCE\REPOS\DEMO\ASP.NET CLASSIC\DEMO.WEBAPP\APP_DATA\DEMO.MDF"
:setvar DefaultFilePrefix "C_\USERS\CHRISSHELBY\SOURCE\REPOS\DEMO\ASP.NET CLASSIC\DEMO.WEBAPP\APP_DATA\DEMO.MDF_"
:setvar DefaultDataPath "C:\Users\chrisshelby\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\chrisshelby\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key  is skipped, element [dbo].[CK_Contact_Phone_Column] (SqlCheckConstraint) will not be renamed to CK_Contact_Phone_Type';


GO

IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
CREATE TABLE #tmpErrors (Error int)
GO
SET XACT_ABORT ON
GO
SET TRANSACTION ISOLATION LEVEL READ COMMITTED
GO
BEGIN TRANSACTION
GO
PRINT N'Creating Table [dbo].[Contact]...';


GO
CREATE TABLE [dbo].[Contact] (
    [Id]           INT          NOT NULL,
    [firstName]    VARCHAR (50) NOT NULL,
    [lastName]     VARCHAR (50) NOT NULL,
    [emailAddress] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Table [dbo].[Contact_Phone]...';


GO
CREATE TABLE [dbo].[Contact_Phone] (
    [Id]         INT        NOT NULL,
    [contact_id] INT        NOT NULL,
    [phone]      NCHAR (10) NOT NULL,
    [type]       NCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Default Constraint unnamed constraint on [dbo].[Contact_Phone]...';


GO
ALTER TABLE [dbo].[Contact_Phone]
    ADD DEFAULT 'main' FOR [type];


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Foreign Key [dbo].[FK_Contact_Phone_to_Contact]...';


GO
ALTER TABLE [dbo].[Contact_Phone] WITH NOCHECK
    ADD CONSTRAINT [FK_Contact_Phone_to_Contact] FOREIGN KEY ([contact_id]) REFERENCES [dbo].[Contact] ([Id]);


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO
PRINT N'Creating Check Constraint [dbo].[CK_Contact_Phone_Type]...';


GO
ALTER TABLE [dbo].[Contact_Phone] WITH NOCHECK
    ADD CONSTRAINT [CK_Contact_Phone_Type] CHECK (Type IN ('main', 'alternate'));


GO
IF @@ERROR <> 0
   AND @@TRANCOUNT > 0
    BEGIN
        ROLLBACK;
    END

IF OBJECT_ID(N'tempdb..#tmpErrors') IS NULL
    CREATE TABLE [#tmpErrors] (
        Error INT
    );

IF @@TRANCOUNT = 0
    BEGIN
        INSERT  INTO #tmpErrors (Error)
        VALUES                 (1);
        BEGIN TRANSACTION;
    END


GO

IF EXISTS (SELECT * FROM #tmpErrors) ROLLBACK TRANSACTION
GO
IF @@TRANCOUNT>0 BEGIN
PRINT N'The transacted portion of the database update succeeded.'
COMMIT TRANSACTION
END
ELSE PRINT N'The transacted portion of the database update failed.'
GO
IF (SELECT OBJECT_ID('tempdb..#tmpErrors')) IS NOT NULL DROP TABLE #tmpErrors
GO
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Contact_Phone] WITH CHECK CHECK CONSTRAINT [FK_Contact_Phone_to_Contact];

ALTER TABLE [dbo].[Contact_Phone] WITH CHECK CHECK CONSTRAINT [CK_Contact_Phone_Type];


GO
PRINT N'Update complete.';


GO
